name: Rebuild Agent VM

env:
  PREFECT_API_KEY: ${{ secrets.PREFECT_API_KEY }}
  PREFECT_API_URL: ${{ secrets.PREFECT_API_URL }}
  PREFECT_AGENT_QUEUE_NAME: ${{ secrets.PREFECT_AGENT_QUEUE_NAME }}
  GCP_RESOURCE_REGION: ${{ secrets.GCP_RESOURCE_REGION }}
  GCP_COMPUTE_ENGINE_REGION: ${{ secrets.GCP_COMPUTE_ENGINE_REGION }}
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_COMPUTE_ENGINE_NAME: ${{ secrets.GCP_COMPUTE_ENGINE_NAME }}
  GCP_SERVICE_ACCOUNT_EMAIL: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}
  GCP_SERVICE_ACCOUNT_API_KEY: ${{ secrets.GCP_SERVICE_ACCOUNT_API_KEY }}

on:
  workflow_dispatch:
    inputs:

jobs:
  build-and-provision-vm:
    name: Provision Prefect Agent VM

    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "^3.11"

      - uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_API_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Login to GAR
        uses: docker/login-action@v2
        with:
          registry: "${{ env.GCP_RESOURCE_REGION }}-docker.pkg.dev"
          username: _json_key
          password: ${{ secrets.GCP_SERVICE_ACCOUNT_API_KEY }}

      - name: Build and push image to GAR
        id: docker-agent-image
        run: |
          RAW_IMAGE=$GCP_RESOURCE_REGION-docker.pkg.dev/$GCP_PROJECT/nyc-stats/agent
          IMAGE_URI=$GCP_RESOURCE_REGION-docker.pkg.dev/$GCP_PROJECT/nyc-stats/agent:$GITHUB_SHA

          docker build -q --build-arg PREFECT_API_KEY=$PREFECT_API_KEY \
            --build-arg PREFECT_API_URL=$PREFECT_API_URL \
            --build-arg PREFECT_AGENT_QUEUE_NAME=$PREFECT_AGENT_QUEUE_NAME \
            -t $RAW_IMAGE -f ./Dockerfiles/agent.Dockerfile .

          docker tag $RAW_IMAGE $IMAGE_URI
          docker push $RAW_IMAGE
          docker push $IMAGE_URI

          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_OUTPUT
        shell: bash

      - name: Delete existing Compute Engine instance if there is one
        run: gcloud compute instances delete $GCP_COMPUTE_ENGINE_NAME --zone $GCP_COMPUTE_ENGINE_REGION --quiet --verbosity none
        shell: bash

      - name: Deploy new Compute Engine with new image to GCP
        shell: bash
        run: |
          gcloud compute instances create-with-container $GCP_COMPUTE_ENGINE_NAME \
            --zone $GCP_COMPUTE_ENGINE_REGION \
            --machine-type e2-micro \
            --service-account $GCP_SERVICE_ACCOUNT_EMAIL \
            --scopes "cloud-platform" \
            --container-image "${{ steps.docker-agent-image.outputs.IMAGE_URI }}"
