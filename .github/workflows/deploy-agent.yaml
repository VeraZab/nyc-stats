name: Trigger Agent VM Rebuild

env:
  PREFECT_API_KEY: ${{ secrets.PREFECT_API_KEY }}
  PREFECT_API_URL: ${{ secrets.PREFECT_API_URL }}
  PREFECT_AGENT_QUEUE_NAME: ${{ secrets.PREFECT_AGENT_QUEUE_NAME }}
  GCP_RESOURCE_REGION: ${{ secrets.GCP_RESOURCE_REGION }}
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_AGENT_ARTIFACT_REPOSITORY_NAME: ${{ secrets.GCP_AGENT_ARTIFACT_REPOSITORY_NAME }}
  AGENT_IMAGE_NAME: ${{ secrets.AGENT_IMAGE_NAME }}
  GCP_COMPUTE_ENGINE_NAME: ${{ secrets.GCP_COMPUTE_ENGINE_NAME }}
  GCP_SERVICE_ACCOUNT_EMAIL: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}

on:
  workflow_dispatch:
    inputs:
      GCP_CREDENTIALS_JSON:
        description: "Content of the Service Account JSON key file"
        required: true

jobs:
  build-and-apply-deployment:
    name: Provision Prefect Agent VM

    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ inputs.GCP_CREDENTIALS_JSON }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Login to GAR
        uses: docker/login-action@v2
        with:
          registry: "${{ env.GCP_RESOURCE_REGION }}-docker.pkg.dev"
          username: _json_key
          password: ${{ inputs.GCP_CREDENTIALS_JSON }}

      - name: Build and push image to GAR
        id: docker-agent-image
        run: |
          RAW_IMAGE=$GCP_RESOURCE_REGION-docker.pkg.dev/$GCP_PROJECT/$GCP_AGENT_ARTIFACT_REPOSITORY_NAME/$AGENT_IMAGE_NAME
          IMAGE_URI=$GCP_RESOURCE_REGION-docker.pkg.dev/$GCP_PROJECT/$GCP_AGENT_ARTIFACT_REPOSITORY_NAME/$AGENT_IMAGE_NAME:$GITHUB_SHA

          docker build -q -t $RAW_IMAGE -f ./Dockerfiles/agent.Dockerfile .
          docker tag $RAW_IMAGE $IMAGE_URI
          docker push $RAW_IMAGE
          docker push $IMAGE_URI

          echo "::set-output name=IMAGE_URI::$IMAGE_URI"
        shell: bash

      - name: Delete existing Compute Engine instance if there is one
        run: gcloud compute instances delete $GCP_COMPUTE_ENGINE_NAME --zone $GCP_RESOURCE_REGION --quiet --verbosity none
        continue-on-error: true
        shell: bash

      - name: Deploy Compute Engine instance in GCP
        shell: bash
        run: |
          gcloud compute instances create-with-container $GCP_COMPUTE_ENGINE_NAME \
            --zone $GCP_RESOURCE_REGION \
            --machine-type e2-micro \
            --service-account $GCP_SERVICE_ACCOUNT_EMAIL \
            --scopes "cloud-platform" \
            --container-image "${{ steps.docker-agent-image.outputs.IMAGE_URI }}"
